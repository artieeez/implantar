"""
Django settings for implantar_backend project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

from pathlib import Path
import os
from corsheaders.defaults import default_headers, default_methods

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = '&(m1j89b@dk*ghrgf%hq^!_!7f_l9r%x1=azz0086-%l2)9&8m'

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = True

ALLOWED_HOSTS = [
        '*'
    ]



# Application definition

INSTALLED_APPS = [
    'checker',
    'db_version',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'rest_framework',
    'django_filters',
    'rest_framework.authtoken',
    'corsheaders',
    'rest_framework_simplejwt.token_blacklist',
]

MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'corsheaders.middleware.CorsMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'implantar_backend.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'implantar_backend.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': 'postgres',
        'USER': 'postgres',
        'PASSWORD': 'postgres',
        'HOST': 'db',
        'PORT': 5432,
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'pt-BR'

TIME_ZONE = 'America/Sao_Paulo'

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

MEDIA_ROOT = os.path.join(os.path.dirname(BASE_DIR), 'implantar_backend')

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
    'PAGE_SIZE': 10,
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAdminUser',
    ],
    'DEFAULT_AUTHENTICATION_CLASSES': [
        'rest_framework.authentication.TokenAuthentication',
        'rest_framework_simplejwt.authentication.JWTAuthentication',
        'rest_framework.authentication.SessionAuthentication',
    ],
    'DEFAULT_FILTER_BACKENDS': [
        'django_filters.rest_framework.DjangoFilterBackend',
    ],
    'DEFAULT_THROTTLE_CLASSES': [
        'rest_framework.throttling.AnonRateThrottle',
        'rest_framework.throttling.UserRateThrottle'
    ],
    'DEFAULT_THROTTLE_RATES': {
        'anon': '60/minute',
        'user': '1000/day'
    }
}

AVALIADOR_GROUP_NAME = 'avaliador'
CLIENTE_GROUP_NAME = 'cliente'

DEFAULT_CHARSET = 'utf-8'


""" PROXY """
""" O proxy localiza toda a api atrás da localidade /api """
USE_X_FORWARDED_HOST = True
STATIC_URL = '/api/static/'
MEDIA_URL = '/api/media/'


""" CORS """
CORS_ALLOWED_ORIGINS = [
    "http://localhost",
    "http://127.0.0.1",
    "http://vue-auth-frontend",
    "http://192.168.0.10"
]
# allow all requests containing any of the default headers(as in django docs) or content-type header
CORS_ALLOW_HEADERS = default_headers + (
    'contenttype',
)
CORS_ALLOW_METHODS = list(default_methods)
# CORS_ORIGIN_ALLOW_ALL = True

# Define as classes de usuários. | Utilizado em appconfig.py
CLASSES_DE_USUARIOS = [
    'operador',
    'operador_limitado',
    'representante',
    'representante_limitado',
]

# Configuração das permissões da admin page | Utilizado em appconfig.py
__all__actions__ = [
    'add',
    'change',
    'delete',
    'view',
]
OBJETOS_ACESSIVEIS_OPERADOR = [
    {
        'nome': 'profile',
        'actions': [
            'view',
            'change',
        ],
    },
    {
        'nome': 'user',
        'actions': [
            'view',
            'change',
        ],
    },
    {
        'nome': 'registertoken',
        'actions': [
            'view',
            'delete',
        ],
    },
    {
        'nome': 'rede',
        'actions': __all__actions__,
    },
    {
        'nome': 'ponto',
        'actions': __all__actions__,
    },
    {
        'nome': 'visita',
        'actions': __all__actions__,
    },
    {
        'nome': 'checklist',
        'actions': __all__actions__,
    },
    {
        'nome': 'checklistitem',
        'actions': __all__actions__,
    },
    {
        'nome': 'itembase',
        'actions': __all__actions__,
    },
    {
        'nome': 'categoria',
        'actions': __all__actions__,
    },
]

# Idade máxima do RegisterToken em horas
REGISTER_TOKEN_LIFE = 200
